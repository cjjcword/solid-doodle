#define ROW 9
#define COL 9
#define ROWS ROW+2
#define COLS COL+2
#define EAST_COUNT 10
#include<stdio.h>
#include<time.h>

void Iniboard(char board[ROWS][COLS], int rows, int cols,char set);
void Displayboard(char board[ROWS][COLS],int row,int col);
void SetMine(char board[ROWS][COLS],int row, int col);
void FindMine(char mine[ROWS][COLS],char show[ROWS][COLS],int row,int col);

#include "game.h"
void Iniboard(char board[ROWS][COLS], int row, int col,char set)
{
	int i = 0;
	int j = 0;
	for (i = 0; i < ROWS; i++)
	{
		for (j = 0; j < COLS; j++)
		{
			board[i][j] = set;
		}
	}
}

void Displayboard(char board[ROWS][COLS], int row, int col)
{
	int i = 0;
	int j = 0;
	//打印列号
	for (i = 0; i <= col; i++)
	{
		printf("%d ", i);
	}
	printf("\n");
	for (i = 1; i <=row; i++)
	{
		printf("%d ", i);//打印列号
		for (j = 1; j <=col; j++)
		{
			printf("%c ", board[i][j]);
		}
		printf("\n");
	}
	printf("\n");
}

void SetMine(char board[ROWS][COLS], int row, int col)
{
	int count = EAST_COUNT;
	while (count)
	{
		int x = rand() % row + 1;
		int y = rand() % col + 1;
		if (board[x][y] == '0')
		{
			board[x][y] = '1';
			count--;
		}
	}

}

int get_mine_count(char mine[ROWS][COLS], int x, int y)
{
	return mine[x - 1][y - 1] +
		   mine[x - 1][y] +
		   mine[x - 1][y + 1] +
		   mine[x][y - 1] +
		   mine[x][y + 1] +
		   mine[x + 1][y + 1] +
		   mine[x + 1][y] +
		   mine[x + 1][y - 1] - 8 * '0';
}

void FindMine(char mine[ROWS][COLS], char show[ROWS][COLS], int row, int col)
{
	int x, y = 0;
	int win = 0;
	while (win<row*col-EAST_COUNT)
	{
		printf("请输入坐标：");
		scanf_s("%d%d", &x, &y);
		if (x >= 1 && x <= row && y >= 1 && y <= col)
		{
			//坐标合法
			if (mine[x][y] == '1')//踩雷
			{
				printf("很遗憾,你被炸死了！\n");
				Displayboard(mine, row, col);
				break;
			}
			else//没有踩雷
			{
				//计算x,y坐标边上有几个雷
				int count = get_mine_count(mine,x,y);
				show[x][y] = count + '0';
				Displayboard(show,row,col);
				win++
			}
		}
		else
		{
			printf("坐标非法；请重新输入!\n");
		}
	}
	if (win = row * col - EAST_COUNT)
	{
		printf("恭喜你，成功排雷！！\n");
	}
}

#include"game.h"

void menu()
{
	printf("***************************************\n");
	printf("***********请选择游戏指令**************\n");
	printf("***********1.开始  0.结束**************\n");
	printf("***************************************\n");
}

void game()
{
	//雷的信息存储
	//布置好的雷的信息
	char mine[ROWS][COLS] = { 0 };

	//排查出的雷的信息
	char show[ROWS][COLS] = { 0 };

	//初始化
	Iniboard(mine, ROWS, COLS,'0');
	Iniboard(show, ROWS, COLS,'*');

	//打印棋盘
	Displayboard(mine,ROW,COL);
	Displayboard(show, ROW, COL);

	//布置雷
	SetMine(mine, ROW, COL);
	
	//扫雷
	FindMine(mine,show,ROW,COL);
}

void test()
{
	int input = 0;
	srand((unsigned int)time(NULL));
	do
	{
		menu();
		printf("请选择：");
		scanf_s("%d",&input);
		switch (input)
		{
		case 1 :
			game();
			break;
		case 0 :
			printf("退出游戏\n");
			break;
		default :
			printf("请重新选择指令！\n");
			break;
		}
	} while (input);
}

int main()
{
	test();
	return 0;
}
